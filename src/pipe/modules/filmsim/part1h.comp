#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable
#include "head.glsl"
layout(set = 1, binding = 4) uniform sampler2D img_coupler;
layout(push_constant, std140) uniform push_t
{
  float scale;
} push;

void main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, imageSize(img_out)))) return;
  vec3 coupler = texture(img_coupler, (ipos+0.5)/vec2(imageSize(img_out))).rgb;
  vec3 log_raw;
  if(push.scale != 1.0)
    log_raw = sample_catmull_rom(img_in, (ipos+0.5)/vec2(imageSize(img_out))).rgb;
  else
    log_raw = texture(img_in, (ipos+0.5)/vec2(imageSize(img_out))).rgb;

  log_raw = develop_film_correct_exposure(log_raw, coupler);
  vec3 raw = exp(log_raw);
  // this needs to be blurred/summed for halation
  imageStore(img_out, ipos, vec4(raw, 1));
}
